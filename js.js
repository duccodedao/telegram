// L·∫•y danh s√°ch y√™u th√≠ch t·ª´ localStorage
function loadFavorites() {
    let favorites = JSON.parse(localStorage.getItem('favorites')) || [];
    return favorites;
}

// L∆∞u danh s√°ch y√™u th√≠ch v√†o localStorage
function saveFavorites(favorites) {
    localStorage.setItem('favorites', JSON.stringify(favorites));
}

// Hi·ªÉn th·ªã danh s√°ch y√™u th√≠ch
function displayFavorites() {
    let favorites = loadFavorites();
    let favoriteAppsContainer = document.getElementById('favorite-apps');
    favoriteAppsContainer.innerHTML = '';

    favorites.forEach(app => {
        favoriteAppsContainer.innerHTML += `
            <div class="app">
                <a href="${app.href}" target="_blank">
                    <img src="${app.src}" alt="${app.name}">
                </a>
                <span>${app.name} <i class="heart" data-app="${app.name}">‚ô•</i></span>
            </div>`;
    });
}

// X·ª≠ l√Ω khi b·∫•m v√†o icon tr√°i tim
document.addEventListener('click', function(event) {
    if (event.target.classList.contains('heart')) {
        let appElement = event.target.closest('.app');
        let app = {
            name: event.target.getAttribute('data-app'),
            src: appElement.querySelector('img').getAttribute('src'),
            href: appElement.querySelector('a').getAttribute('href')
        };
        let favorites = loadFavorites();

        // Ki·ªÉm tra n·∫øu ·ª©ng d·ª•ng ƒë√£ ƒë∆∞·ª£c y√™u th√≠ch
        let existingAppIndex = favorites.findIndex(fav => fav.name === app.name);

        if (existingAppIndex !== -1) {
            // N·∫øu app ƒë√£ c√≥ trong y√™u th√≠ch, th√¨ b·ªè ƒëi
            favorites.splice(existingAppIndex, 1);
            event.target.textContent = '‚ô°'; // Thay ƒë·ªïi icon v·ªÅ ch∆∞a ch·ªçn
        } else {
            // N·∫øu ch∆∞a c√≥ th√¨ th√™m v√†o
            favorites.push(app);
            event.target.textContent = '‚ô•'; // Thay ƒë·ªïi icon th√†nh ch·ªçn
        }

        saveFavorites(favorites);
        displayFavorites(); // C·∫≠p nh·∫≠t l·∫°i danh s√°ch y√™u th√≠ch
    }
});

// Hi·ªÉn th·ªã danh s√°ch y√™u th√≠ch khi load trang
window.onload = function() {
    displayFavorites();
    // ƒê·∫∑t tr·∫°ng th√°i icon y√™u th√≠ch khi trang ƒë∆∞·ª£c t·∫£i
    let favorites = loadFavorites();
    document.querySelectorAll('.heart').forEach(heart => {
        let appName = heart.getAttribute('data-app');
        if (favorites.some(app => app.name === appName)) {
            heart.textContent = '‚ô•';
        }
    });
};


window.Telegram.WebApp.ready(); // ƒê·∫£m b·∫£o WebApp ƒë√£ s·∫µn s√†ng

// T·∫°o m·ªôt danh s√°ch c√°c URL avatar ng·∫´u nhi√™n
const avatars = [
    'logo-coin/av1.png',
    'logo-coin/av2.png',
    'logo-coin/av3.png',
    'logo-coin/av4.png',
    'logo-coin/av5.png',
    'logo-coin/av6.png',
    'logo-coin/av7.png',
    'logo-coin/av8.png',
    'logo-coin/av9.png',
    'logo-coin/av10.png',
    'logo-coin/av11.png',
    'logo-coin/av12.png',
];

// L·∫•y m·ªôt ·∫£nh ƒë·∫°i di·ªán ng·∫´u nhi√™n
const randomAvatar = avatars[Math.floor(Math.random() * avatars.length)];

// L·∫•y th√¥ng tin ng∆∞·ªùi d√πng n·∫øu c√≥ s·∫µn
if (Telegram.WebApp.initDataUnsafe) {
    let user = Telegram.WebApp.initDataUnsafe.user;

    if (user) {
        let userName = user.first_name + " " + (user.last_name || "");
        let username = user.username || "No Username"; // Thay th·∫ø n·∫øu kh√¥ng c√≥ username

        // C·∫≠p nh·∫≠t v√†o ph·∫ßn HTML
        document.getElementById('user-name').textContent = userName;
        document.getElementById('user-username').textContent = `@${username}`;
        document.getElementById('user-avatar').src = randomAvatar; // S·ª≠ d·ª•ng ·∫£nh ng·∫´u nhi√™n
    } else {
        // Tr∆∞·ªùng h·ª£p kh√¥ng c√≥ th√¥ng tin ng∆∞·ªùi d√πng
        document.getElementById('user-name').textContent = "Loading...";
        document.getElementById('user-username').textContent = "@username";
        document.getElementById('user-avatar').src = randomAvatar; // S·ª≠ d·ª•ng ·∫£nh ng·∫´u nhi√™n
    }
} else {
    console.error("Telegram WebApp API kh√¥ng kh·∫£ d·ª•ng ho·∫∑c kh√¥ng c√≥ th√¥ng tin ng∆∞·ªùi d√πng.");
}



// Bi·∫øn l∆∞u s·ªë ph√∫t v√† gi√¢y
let activeMinutes = 0;
let activeSeconds = 0;

// Ki·ªÉm tra n·∫øu ƒë√£ c√≥ d·ªØ li·ªáu th·ªùi gian trong localStorage
if (localStorage.getItem('activeMinutes')) {
    activeMinutes = parseInt(localStorage.getItem('activeMinutes'));
}

if (localStorage.getItem('activeSeconds')) {
    activeSeconds = parseInt(localStorage.getItem('activeSeconds'));
}

// H√†m c·∫≠p nh·∫≠t th·ªùi gian ho·∫°t ƒë·ªông
function updateActiveTime() {
    activeSeconds++;
    if (activeSeconds === 60) {
        activeMinutes++;
        activeSeconds = 0;
    }

    // C·∫≠p nh·∫≠t th·ªùi gian ho·∫°t ƒë·ªông v√†o localStorage
    localStorage.setItem('activeMinutes', activeMinutes);
    localStorage.setItem('activeSeconds', activeSeconds);

    // C·∫≠p nh·∫≠t hi·ªÉn th·ªã tr√™n giao di·ªán
    document.getElementById('minutes').textContent = activeMinutes.toString().padStart(2, '0');
    document.getElementById('seconds').textContent = activeSeconds.toString().padStart(2, '0');
}

// G·ªçi h√†m c·∫≠p nh·∫≠t m·ªói gi√¢y
setInterval(updateActiveTime, 1000);





// Danh s√°ch c√°c t√™n ng∆∞·ªùi d√πng ƒë√£ x√°c minh (c√≥ th·ªÉ th√™m s·∫µn ho·∫∑c l·∫•y t·ª´ localStorage)
let verifiedUsers = JSON.parse(localStorage.getItem('verifiedUsers')) || [];

// H√†m th√™m icon x√°c minh v√† n√∫t "X√°c minh ngay"
function addVerifiedIcon() {
    const userNameElement = document.getElementById('user-username');
    
    if (userNameElement) {
        // L·∫•y n·ªôi dung hi·ªán t·∫°i c·ªßa t√™n ng∆∞·ªùi d√πng
        const currentName = userNameElement.textContent.trim();
        const username = currentName.startsWith('@') ? currentName.slice(1) : currentName;

        // Ki·ªÉm tra xem t√™n ng∆∞·ªùi d√πng ƒë√£ ƒë∆∞·ª£c x√°c minh hay ch∆∞a
        if (verifiedUsers.includes(username)) {
            // N·∫øu ƒë√£ ƒë∆∞·ª£c x√°c minh, th√™m icon tick xanh
            if (!userNameElement.querySelector('.verified-icon')) {
                const verifiedIcon = '<i class="fas fa-check-circle verified-icon"></i>';
                userNameElement.innerHTML = `${currentName}${verifiedIcon}`;
            }
        } else {
            // N·∫øu ch∆∞a ƒë∆∞·ª£c x√°c minh, th√™m n√∫t "X√°c minh ngay"
            const verifyButton = `<button id="verify-button" class="verify-btn">Verify</button>`;
            userNameElement.innerHTML = `${currentName}${verifyButton}`;
            
            // Th√™m s·ª± ki·ªán click cho n√∫t x√°c minh
            document.getElementById('verify-button').addEventListener('click', function() {
                // Th√™m icon tick xanh ngay l·∫≠p t·ª©c
                const verifiedIcon = '<i class="fas fa-check-circle verified-icon"></i>';
                userNameElement.innerHTML = `${currentName}${verifiedIcon}`;

                // L∆∞u tr·∫°ng th√°i x√°c minh (gi·∫£ s·ª≠ b·∫°n c√≥ m·ªôt h√†m ƒë·ªÉ l∆∞u tr·∫°ng th√°i)
                saveVerificationStatus(username);
            });
        }
    }
}

// H√†m l∆∞u tr·∫°ng th√°i x√°c minh v√†o localStorage
function saveVerificationStatus(username) {
    // L∆∞u t√™n ng∆∞·ªùi d√πng v√†o danh s√°ch ƒë√£ x√°c minh
    verifiedUsers.push(username);
    localStorage.setItem('verifiedUsers', JSON.stringify(verifiedUsers));
}

// H√†m l·∫•y t√™n ng∆∞·ªùi d√πng t·ª´ Telegram
function loadTelegramUser() {
    if (Telegram.WebApp.initDataUnsafe) {
        let user = Telegram.WebApp.initDataUnsafe.user;

        if (user) {
            let userName = user.first_name + " " + (user.last_name || "");
            let username = user.username || "No Username"; // Thay th·∫ø n·∫øu kh√¥ng c√≥ username

            // C·∫≠p nh·∫≠t v√†o ph·∫ßn HTML
            document.getElementById('user-name').textContent = userName;
            document.getElementById('user-username').textContent = `@${username}`;
            
            // G·ªçi h√†m th√™m icon x√°c minh sau khi c√≥ t√™n ng∆∞·ªùi d√πng
            addVerifiedIcon();
        } else {
            // Tr∆∞·ªùng h·ª£p kh√¥ng c√≥ th√¥ng tin ng∆∞·ªùi d√πng
            document.getElementById('user-name').textContent = "Loading...";
            document.getElementById('user-username').textContent = "@username";
        }
    } else {
        console.error("Telegram WebApp API kh√¥ng kh·∫£ d·ª•ng ho·∫∑c kh√¥ng c√≥ th√¥ng tin ng∆∞·ªùi d√πng.");
    }
}

// G·ªçi h√†m l·∫•y th√¥ng tin ng∆∞·ªùi d√πng
loadTelegramUser();






const versions = {
    vi: 1,  // Phi√™n b·∫£n ti·∫øng Vi·ªát
    en: 2  // Phi√™n b·∫£n ti·∫øng Anh
};

// Ki·ªÉm tra ng√¥n ng·ªØ ƒë√£ ch·ªçn tr∆∞·ªõc ƒë√≥
let selectedLanguage = localStorage.getItem("selectedLanguage") || "vi";

// C·∫≠p nh·∫≠t hi·ªÉn th·ªã phi√™n b·∫£n v√† ng√¥n ng·ªØ khi trang t·∫£i
function updateVersionAndLanguage() {
    // L·∫•y phi√™n b·∫£n d·ª±a theo ng√¥n ng·ªØ
    const versionIndex = versions[selectedLanguage];
    document.getElementById('versionText').textContent = versionIndex;

    // ƒê·∫∑t ng√¥n ng·ªØ ƒë√£ ch·ªçn v√†o combobox
    document.getElementById('languageSelect').value = selectedLanguage;

    // Ki·ªÉm tra xem phi√™n b·∫£n ƒë√£ th√¥ng b√°o l·∫ßn cu·ªëi
    const lastVersionIndex = localStorage.getItem("lastVersionIndex_" + selectedLanguage);

    if (parseInt(lastVersionIndex) !== versionIndex) {
        // N·∫øu phi√™n b·∫£n kh√°c v·ªõi phi√™n b·∫£n ƒë√£ l∆∞u
        Swal.fire({
          
            html: selectedLanguage === "vi" ? 
                  '<b>Phi√™n b·∫£n m·ªõi:</b> v2.' + versionIndex + '<br>·ª®ng d·ª•ng v·ª´a update th√™m d·ª± √°n <strong style="color: #FF5733;">$PAWS</strong> (PAWS), ch∆°i ngay üî•' :
                  '<b>Ver m·ªõi k√¨a:</b> v2.' + versionIndex + '<br>C·∫≠p nh·∫≠t l·∫π ƒëi c√≤n ch∆°i, ·ªü ƒë√≥ ƒë·ªçc concac!',
            
            imageUrl: 'logo-coin/paws.jpg', // ƒê∆∞·ªùng d·∫´n ·∫£nh th√¥ng b√°o
            imageAlt: 'C·∫≠p nh·∫≠t m·ªõi',           // VƒÉn b·∫£n thay th·∫ø cho ·∫£nh
            confirmButtonText: selectedLanguage === "vi" ? 'Xem ngay!' : 'Concac!',
            customClass: {
                popup: 'swal2-popup',
                title: 'swal2-title',
                confirmButton: 'swal2-confirm'
            }
        }).then(() => {
            // L∆∞u phi√™n b·∫£n v√†o localStorage cho ng√¥n ng·ªØ hi·ªán t·∫°i
            localStorage.setItem("lastVersionIndex_" + selectedLanguage, versionIndex);
        });
    }
}

// G·ªçi h√†m ƒë·ªÉ c·∫≠p nh·∫≠t ng√¥n ng·ªØ v√† phi√™n b·∫£n ngay khi t·∫£i trang
updateVersionAndLanguage();

// X·ª≠ l√Ω khi thay ƒë·ªïi ng√¥n ng·ªØ
document.getElementById('languageSelect').addEventListener('change', function() {
    selectedLanguage = this.value;
    localStorage.setItem("selectedLanguage", selectedLanguage);
    updateVersionAndLanguage();
});





